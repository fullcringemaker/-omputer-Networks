Задание
Для реализации приложения на языке GO выполняющего синтаксический разбор XML
файла формата RSS предлагается использовать любую из приведенных ниже библиотек,
либо предложить свою.
Библиотеки для работы с RSS-форматом:
 https://github.com/mmcdole/gofeed
 https://github.com/SlyMarbo/rss
 https://github.com/IzeBerg/rss-parser-go
Приложение должно подключаться к удаленной базе данных под управлением СУБД
MySQL и выполнять обновление новостей в таблице. При этом важно учесть следующее: при
повторном запуске приложения необходимо сравнивать новости в rss канале с теми, что
записаны в таблице и при повторных запусках приложения дублей новостей в таблице быть
не должно. Вывод обновления данных должен происходить асинхронно в html dashboard.
Во время проверки работы будет проверяться следующее: выполняется обновление
таблицы из rss канала, далее удаляем несколько записей из таблицы в базе данных и еще раз
запускаем приложение; удаленные записи должны появиться в таблице.
Также возможно и другой метод тестирования: берем запись какой-то новости в
таблице, в текст новости или заголовок новости вносим произвольные строки, запускаем
приложение и проверяем добавилась ли новость, текст которой мы испортили из rss канала в
таблицу или нет — должна добавляться.
Параметры доступа к базе данных:
 adminer: http://students.yss.su/adminer/
 host: students.yss.su
 db: iu9networkslabs
 login: iu9networkslabs
 passwd: Je2dTYr6

данная задание нужно сделать для этого rss-канала
https://ldpr.ru/rss

при это на сайте adminer по ссылке http://students.yss.su/adminer/?server=students.yss.su&username=iu9networkslabs&db=iu9networkslabs&table=iu9Trofimenko должна появляться таблица, куда будут оптравляться спарсенные новости. Таблица должна иметь как минимум id (порядковый номер новости, должен иметь автоматическое приращение), title (заголовок новости), description (полный текст новости), date (должна писаться как dd.mm.yyyy) и тд по возможности еще какие-либо поля, если таковые могут получиться.

Эти спаршенные новости в виде дэшборда должны отображаться на сайте. Никакого css оформления добавлять не нужно. файл с html кодом должен называться dashboard.html. Для выполнения этого условия необходимо использовать вебсокеты, поскольку необходимо, чтобы была возможность динамически исправить базу данных новостей с обновлением dashboard без перезагрузок страницы (тоесть я должен иметь возможность в созданной таблице удалить какую нибудь новость или даже все новости и это изменение покажется на сайте в режиме реального времени благодаря использованию вебсокетов)

Также должен файл parser.html, который должен содержать парсер, который будет содержать шаблон для отображения новостей 
 
В итоговом варианте должно быть 3 файла, один из которых на языке go, еще 2 файла должны быть на html (один из которых будет содержать парсер, а другой иметь страницу новостей), которые будут выполнять все вышеуказанные требования. Запускать код буду локально, необходимо чтобы открывалось с использованием порта 9742

файл parser.html должен содержать шаблон для сайта, тогда как все новости должны отображаться на dashboard.html. Файл parser.html должно быть что то, похожее на то, что указано ниже, но должно быть обязательно изменено  и переделано под то, что необходимо спарсить для моей таблицы

вот запрос, которым создается таблица на сайте adminer
CREATE TABLE `iu9Trofimenko` (
  `id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
  `title` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL,
  `description` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL,
  `date` date NULL,
  `link` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL,
  `author` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL,
  `content` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL
);


важно, чтобы при редактировании таблицы на сайте adminer на сайте, где будут отображаться новости отображались изменения в реальном времени
Для того, чтобы новости отображались корректно, а русские буквы не заменялись на знаки вопроса используй библиотеку github.com/rainycape/unidecode, которая помогает справиться с этим. Это обязательное условие для выполнения всего задания.
Код должен быть как можно более оптимизированным, чтобы промежуток между обновления dashboard при изменениее таблицы баззы данных был как можно меньше и все обновлялось быстрее

вот пример того, как идет новость. мне нужно, чтобы для парсинга были title (заголовок новости), link (ссылка на новость), content (сама новость), author (автор) и data (дата когда новость выпущена, без точного времени, только дата)

<item>
      <title>Депутат Кошелев спрогнозировал рост цен на жилье</title>
      <link>https://ldpr.ru/events/398628</link>
      <description>Дума ТВ, 7.11.2024</description>
      <content:encoded><![CDATA[<figure class="image"><img src="https://hub.ldpr.ru/media/images/fc0f230577da7b856f75a58cbab16707c082b6f768df609cee9b737a1c27285b.jpg"></figure><p><i>Дума ТВ, 7.11.2024</i></p><p>В новом выпуске подкаста «<a class="ck-link" href="https://vk.com/wall-160662967_396220">Законный вопрос</a>» первый зампред Комитета ГД по строительству и ЖКХ, депутат фракции ЛДПР Владимир Кошелев рассказал, как, по его мнению, очередное повышение ключевой ставки скажется на рынке жилья и на покупательной способности граждан.</p><p>&nbsp;- Ключевая ставка нужна другая, чтобы у нас открывались новые производства. Как дальше всё это будет работать? Ипотека, если откровенно говорить, просто остановилась. Все застройщики начинают сворачивать свои строительные площадки, морозить их, останавливать и тормозить свои темпы строительства. Если нет спроса, для кого строить? Никакого снижения стоимости квадратного метра не будет из-за всех этих действий. К сожалению, будет только увеличение, - &nbsp;считает парламентарий.</p>]]></content:encoded>
      <author>ЛДПР</author>
      <enclosure url="https://hub.ldpr.ru/media/images/fc0f230577da7b856f75a58cbab16707c082b6f768df609cee9b737a1c27285b.jpg" length="1389800" type="image/jpeg"></enclosure>
      <guid>398628</guid>
      <pubDate>Thu, 07 Nov 2024 00:00:00 +0000</pubDate>
    </item>

предоставь коды, которые полностью выполняют все указанные условия
