Задание
Для реализации приложения на языке GO выполняющего синтаксический разбор XML
файла формата RSS предлагается использовать любую из приведенных ниже библиотек,
либо предложить свою.
Библиотеки для работы с RSS-форматом:
 https://github.com/mmcdole/gofeed
 https://github.com/SlyMarbo/rss
 https://github.com/IzeBerg/rss-parser-go
Приложение должно подключаться к удаленной базе данных под управлением СУБД
MySQL и выполнять обновление новостей в таблице. При этом важно учесть следующее: при
повторном запуске приложения необходимо сравнивать новости в rss канале с теми, что
записаны в таблице и при повторных запусках приложения дублей новостей в таблице быть
не должно. Вывод обновления данных должен происходить асинхронно в html dashboard.
Во время проверки работы будет проверяться следующее: выполняется обновление
таблицы из rss канала, далее удаляем несколько записей из таблицы в базе данных и еще раз
запускаем приложение; удаленные записи должны появиться в таблице.
Также возможно и другой метод тестирования: берем запись какой-то новости в
таблице, в текст новости или заголовок новости вносим произвольные строки, запускаем
приложение и проверяем добавилась ли новость, текст которой мы испортили из rss канала в
таблицу или нет — должна добавляться.
Параметры доступа к базе данных:
 adminer: http://students.yss.su/adminer/
 host: students.yss.su
 db: iu9networkslabs
 login: iu9networkslabs
 passwd: Je2dTYr6

данная задание нужно сделать для этого rss-канала
https://ldpr.ru/rss

при это на сайте adminer по ссылке http://students.yss.su/adminer/?server=students.yss.su&username=iu9networkslabs&db=iu9networkslabs&table=iu9Trofimenko должна появляться таблица, куда будут оптравляться спарсенные новости. 
вот запрос, которым создается таблица на сайте adminer

Таблица уже создана,  Вот примерный вариант того, как должен выглядеть sql-запрос новости в таблицу

INSERT INTO iu9Trofimenko (title, link, description, pub_date)
            VALUES (?, ?, ?, ?)
            ON DUPLICATE KEY UPDATE
                title = VALUES(title),
                link = VALUES(link),
                description = VALUES(description),
                pub_date = VALUES(pub_date)

Эти спаршенные новости в виде дэшборда должны отображаться на сайте. Никакого css оформления добавлять не нужно. файл, где будут отображаться новости, называется dashboard.html. Для выполнения этого условия необходимо использовать вебсокеты, поскольку необходимо, чтобы была возможность динамически исправить базу данных новостей с обновлением dashboard без перезагрузок страницы (тоесть я должен иметь возможность в созданной таблице удалить какую нибудь новость или даже все новости и это изменение покажется на сайте в режиме реального времени благодаря использованию вебсокетов)

Также должен файл parser.html, который будет содержать шаблон для отображения новостей, похожий на тот, что дан ниже. 
    <div class="news-item">
        <h2><a href="{{.Link}}" target="_blank">{{.Title}}</a></h2>
        <p>{{.Description}}</p>
        <small>{{.PubDate.Format "02.01.2006 15:04"}}</small>
        <hr>
    </div>
{{end}}

файл parser.html должен содержать шаблон для сайта, тогда как все новости должны отображаться на dashboard.html. Файл parser.html должно быть что то, похожее на то, что указано в примерном варианте шаблона, но должно быть обязательно изменено  и переделано под то, что необходимо, исходя из данных указанных в моей таблице

Запускать код буду локально, необходимо чтобы открывалось с использованием порта 9742

Помни про то, что в коде обязательно нужно использовать библиотеку github.com/rainycape/unidecode, которую я указал, а также про использование вебсокетов для быстрого отображения изменений в таблице на сайте.
Помимо этого важно еще учесть момент, что при удалении абсолютно всех данных в таблице, эти новости будут появляться в таблице снова, однако мне нужно, чтобы они появлялись не сразу после удаления, а через 1 минуту они стали появляться снова. поставь именно такой период для данного действия
